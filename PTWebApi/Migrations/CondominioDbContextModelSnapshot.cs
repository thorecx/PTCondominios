// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTWebApi.Models;

namespace PTWebApi.Migrations
{
    [DbContext(typeof(CondominioDbContext))]
    partial class CondominioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PTWebApi.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdEstado")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdEstado");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PTWebApi.Models.Cuota", b =>
                {
                    b.Property<int>("IdCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoIdEstado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdPago")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<double>("Mora")
                        .HasColumnType("float");

                    b.Property<int?>("PagoIdPago")
                        .HasColumnType("int");

                    b.HasKey("IdCuota");

                    b.HasIndex("EstadoIdEstado");

                    b.HasIndex("PagoIdPago");

                    b.ToTable("Cuotas");
                });

            modelBuilder.Entity("PTWebApi.Models.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PTWebApi.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoIdEstado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("IdPago");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("EstadoIdEstado");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("PTWebApi.Models.Residencial", b =>
                {
                    b.Property<int>("IdResidencial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EstadoIdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdResidencial");

                    b.HasIndex("EstadoIdEstado");

                    b.ToTable("Residenciales");
                });

            modelBuilder.Entity("PTWebApi.Models.Cliente", b =>
                {
                    b.HasOne("PTWebApi.Models.Estado", "Estado")
                        .WithMany("Clientes")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PTWebApi.Models.Cuota", b =>
                {
                    b.HasOne("PTWebApi.Models.Estado", "Estado")
                        .WithMany("Cuotas")
                        .HasForeignKey("EstadoIdEstado");

                    b.HasOne("PTWebApi.Models.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoIdPago");

                    b.Navigation("Estado");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("PTWebApi.Models.Pago", b =>
                {
                    b.HasOne("PTWebApi.Models.Cliente", "Cliente")
                        .WithMany("Pagos")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("PTWebApi.Models.Estado", "Estado")
                        .WithMany("Pagos")
                        .HasForeignKey("EstadoIdEstado");

                    b.Navigation("Cliente");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PTWebApi.Models.Residencial", b =>
                {
                    b.HasOne("PTWebApi.Models.Estado", "Estado")
                        .WithMany("Residenciales")
                        .HasForeignKey("EstadoIdEstado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PTWebApi.Models.Cliente", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("PTWebApi.Models.Estado", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Cuotas");

                    b.Navigation("Pagos");

                    b.Navigation("Residenciales");
                });
#pragma warning restore 612, 618
        }
    }
}
